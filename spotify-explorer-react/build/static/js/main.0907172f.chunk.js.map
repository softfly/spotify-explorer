{"version":3,"sources":["forms/search.form.js","tables/search.table.js","pages/search.page.js","Header.js","services/spotify.service.js","App.js","serviceWorker.js","index.js"],"names":["SearchForm","props","handleKeyUp","bind","q","React","createRef","searchFormSubject","event","this","next","current","value","className","type","placeholder","ref","onKeyUp","Component","SearchTable","state","error","isLoaded","items","subscribe","form","getAlbums","spotifyService","albumsSubject","result","setAlbumsItems","albumsErrorSubject","setError","setState","albums","message","scope","colSpan","map","item","src","images","url","alt","name","artists","artist","join","release_date","total_tracks","SearchPage","BehaviorSubject","style","color","SpotifyService","fetch","then","response","ok","json","r","catch","e","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.0907172f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class SearchForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleKeyUp = this.handleKeyUp.bind(this);\r\n      this.q = React.createRef();\r\n      this.searchFormSubject = props.searchFormSubject;\r\n    }\r\n    handleKeyUp(event) {\r\n      this.searchFormSubject.next({q: this.q.current.value});\r\n    }\r\n    render() {\r\n      return <div className=\"container-fluid mb-2 mt-2\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Search\" ref={this.q} onKeyUp={this.handleKeyUp} />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>;\r\n    }\r\n  }","import React from 'react';\r\n\r\nexport default class SearchTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: true,\r\n            items: []\r\n        };\r\n        this.searchFormSubject = props.searchFormSubject;\r\n        this.searchFormSubject.subscribe((form) => this.getAlbums(form));\r\n        this.spotifyService = props.spotifyService;\r\n        this.spotifyService.albumsSubject.subscribe(result => this.setAlbumsItems(result));\r\n        this.spotifyService.albumsErrorSubject.subscribe(error => this.setError(error));\r\n    }\r\n    getAlbums(form) {\r\n        if (form && form.q) {\r\n            this.setState({\r\n                isLoaded: false,\r\n                items: []\r\n            });\r\n            this.spotifyService.getAlbums(form.q);\r\n        }\r\n    }\r\n    setAlbumsItems(result) {\r\n        if (result) {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: result.albums.items\r\n            });\r\n        }\r\n    }\r\n    setError(error) {\r\n        if (error) {\r\n            this.setState({\r\n                isLoaded: false,\r\n                error: error.message\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <table className=\"table \">\r\n                            <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Image</th>\r\n                                    <th scope=\"col\">Name</th>\r\n                                    <th scope=\"col\">Artists</th>\r\n                                    <th scope=\"col\">Release Date</th>\r\n                                    <th scope=\"col\">Total tracks</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {error && <tr><td colSpan=\"5\">Error: {error}</td></tr>}\r\n                                {!error && !isLoaded && <tr><td>Loading...</td></tr>}\r\n                                {items.map(item => (\r\n                                    <tr>\r\n                                        <th scope=\"row\"><img src={item.images[2].url} alt=\"{item.name} Album\" /></th>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.artists.map(artist => (artist.name)).join(', ')}</td>\r\n                                        <td>{item.release_date}</td>\r\n                                        <td>{item.total_tracks}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Header } from './../Header';\r\nimport SearchForm from './../forms/search.form.js';\r\nimport SearchTable from './../tables/search.table.js';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport default class SearchPage extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.searchFormSubject = new BehaviorSubject();\r\n      this.spotifyService = props.spotifyService;\r\n    }\r\n    render() {\r\n        return <div className=\"App\">\r\n            {Header()}\r\n            <SearchForm searchFormSubject={this.searchFormSubject} />\r\n            <SearchTable searchFormSubject={this.searchFormSubject} spotifyService={this.spotifyService} />\r\n          </div>;\r\n    }\r\n  }","import React from 'react';\r\nexport function Header() {\r\n  return (<header>\r\n    <div className=\"navbar navbar-dark bg-dark shadow-sm\">\r\n      <div className=\"container-fluid\">\r\n        <div style={{ color: \"white\" }}>Spotify Explorer</div>\r\n      </div>\r\n    </div>\r\n  </header>);\r\n}\r\n","\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport default class SpotifyService {\r\n    constructor() {\r\n        this.albumsSubject = new BehaviorSubject();\r\n        this.albumsErrorSubject = new BehaviorSubject();\r\n    }\r\n    getAlbums(q) {\r\n        fetch(\"/api/spotify/v1/search?q=\" + q)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    response.json().then(r => this.albumsSubject.next(r)).catch(e => this.albumsErrorSubject.next(e));\r\n                } else {\r\n                    response.json().then(e => this.albumsErrorSubject.next(e)).catch(e => this.albumsErrorSubject.next(e));\r\n                }\r\n            })\r\n            .catch(e => this.albumsErrorSubject.next(e));\r\n    }\r\n}","import React from 'react';\nimport SearchPage from './pages/search.page.js';\nimport SpotifyService from './services/spotify.service.js';\n\nfunction App() {\n  let spotifyService = new SpotifyService();  \n  return (\n    <SearchPage spotifyService={spotifyService} />\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}